'use client'

import { useAuthStore } from '@/store/authStore'
import Link from 'next/link'
import { useEffect, useState } from 'react'

interface ProgressStats {
	completedVideos: number
	totalVideos: number
	completedPercent: number
	nextVideo?: {
		id: number
		title: string
		thumbnail: string
	}
	achievements: {
		id: number
		title: string
		description: string
		icon: string
		unlockedAt: string
	}[]
}

export default function UserProgress() {
	const { user } = useAuthStore()
	const [stats, setStats] = useState<ProgressStats | null>(null)
	const [loading, setLoading] = useState(true)
	const [error, setError] = useState<string | null>(null)

	useEffect(() => {
		const fetchStats = async () => {
			if (!user) {
				setLoading(false)
				return
			}

			try {
				setLoading(true)
				setError(null)

				// –í —Ä–µ–∞–ª—å–Ω–æ–º API —ç—Ç–æ –±—ã–ª –±—ã –µ–¥–∏–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ —ç–Ω–¥–ø–æ–∏–Ω—Ç—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
				// –ù–æ –¥–ª—è –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏ –º—ã —Å–æ–∑–¥–∞–¥–∏–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ

				// –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
				await new Promise(resolve => setTimeout(resolve, 500))

				// –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ
				const demoStats: ProgressStats = {
					completedVideos: 2,
					totalVideos: 6,
					completedPercent: 33,
					nextVideo: {
						id: 3,
						title: '–¢–µ—Ö–Ω–∏–∫–∞ –ø–µ—Ä–µ–±–æ—Ä–∞ –¥–ª—è –¥–æ–º–±—Ä—ã',
						thumbnail: '/images/demo/video4.jpg',
					},
					achievements: [
						{
							id: 1,
							title: '–ü–µ—Ä–≤—ã–π —à–∞–≥',
							description: '–ó–∞–≤–µ—Ä—à–µ–Ω –ø–µ—Ä–≤—ã–π –≤–∏–¥–µ–æ—É—Ä–æ–∫',
							icon: 'üèÜ',
							unlockedAt: '2023-11-15T14:30:00Z',
						},
						{
							id: 2,
							title: '–ù–∞—á–∏–Ω–∞—é—â–∏–π –¥–æ–º–±—Ä–∏—Å—Ç',
							description: '–ó–∞–≤–µ—Ä—à–µ–Ω–æ 2 –≤–∏–¥–µ–æ—É—Ä–æ–∫–∞',
							icon: 'üéµ',
							unlockedAt: '2023-11-18T16:45:00Z',
						},
					],
				}

				setStats(demoStats)
			} catch (err) {
				console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', err)
				setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–≥—Ä–µ—Å—Å–∞')
			} finally {
				setLoading(false)
			}
		}

		fetchStats()
	}, [user])

	if (!user) {
		return (
			<div className='bg-white rounded-lg shadow-md p-6'>
				<h2 className='text-xl font-semibold text-gray-900 mb-4'>
					–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å
				</h2>
				<p className='text-gray-600 mb-4'>
					–ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å, —á—Ç–æ–±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è, –ø–æ–ª—É—á–∞—Ç—å
					–¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –Ω–æ–≤—ã–µ —É—Ä–æ–∫–∏.
				</p>
				<div className='flex space-x-4'>
					<Link
						href='/auth/login'
						className='px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700'
					>
						–í–æ–π—Ç–∏
					</Link>
					<Link
						href='/auth/register'
						className='px-4 py-2 border border-indigo-600 text-indigo-600 rounded-md hover:bg-indigo-50'
					>
						–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
					</Link>
				</div>
			</div>
		)
	}

	if (loading) {
		return (
			<div className='bg-white rounded-lg shadow-md p-6 animate-pulse'>
				<div className='h-7 bg-gray-200 rounded mb-4 w-3/4'></div>
				<div className='h-4 bg-gray-200 rounded mb-3 w-full'></div>
				<div className='h-4 bg-gray-200 rounded mb-3 w-5/6'></div>
				<div className='h-24 bg-gray-200 rounded mb-4'></div>
				<div className='h-10 bg-gray-200 rounded w-1/3'></div>
			</div>
		)
	}

	if (error || !stats) {
		return (
			<div className='bg-white rounded-lg shadow-md p-6'>
				<h2 className='text-xl font-semibold text-gray-900 mb-2'>
					–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏
				</h2>
				<p className='text-red-500 mb-2'>
					{error || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ'}
				</p>
				<button
					onClick={() => window.location.reload()}
					className='px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700'
				>
					–û–±–Ω–æ–≤–∏—Ç—å
				</button>
			</div>
		)
	}

	return (
		<div className='bg-white rounded-lg shadow-md p-6'>
			<h2 className='text-xl font-semibold text-gray-900 mb-2'>
				–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è
			</h2>

			{/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä */}
			<div className='mb-6'>
				<div className='flex justify-between items-center mb-2'>
					<span className='text-gray-600'>
						–ó–∞–≤–µ—Ä—à–µ–Ω–æ —É—Ä–æ–∫–æ–≤: {stats.completedVideos} –∏–∑ {stats.totalVideos}
					</span>
					<span className='text-indigo-600 font-semibold'>
						{stats.completedPercent}%
					</span>
				</div>
				<div className='h-2 bg-gray-200 rounded-full'>
					<div
						className='h-full bg-indigo-600 rounded-full'
						style={{ width: `${stats.completedPercent}%` }}
					></div>
				</div>
			</div>

			{/* –°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫ */}
			{stats.nextVideo && (
				<div className='mb-6'>
					<h3 className='text-lg font-medium text-gray-900 mb-3'>
						–°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫
					</h3>
					<Link
						href={`/videos/${stats.nextVideo.id}`}
						className='block bg-gray-50 rounded-md p-4 hover:bg-gray-100 transition-colors'
					>
						<div className='flex items-center'>
							<div className='w-12 h-12 bg-indigo-100 rounded flex-shrink-0 mr-4 overflow-hidden relative'>
								{stats.nextVideo.thumbnail && (
									<img
										src={stats.nextVideo.thumbnail}
										alt={stats.nextVideo.title}
										className='object-cover w-full h-full'
									/>
								)}
							</div>
							<div>
								<h4 className='font-medium text-gray-900'>
									{stats.nextVideo.title}
								</h4>
								<span className='text-indigo-600 text-sm'>
									–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ ‚Üí
								</span>
							</div>
						</div>
					</Link>
				</div>
			)}

			{/* –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è */}
			{stats.achievements.length > 0 && (
				<div>
					<h3 className='text-lg font-medium text-gray-900 mb-3'>
						–í–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
					</h3>
					<div className='space-y-3'>
						{stats.achievements.map(achievement => (
							<div
								key={achievement.id}
								className='flex items-center bg-gray-50 rounded-md p-3'
							>
								<div className='w-10 h-10 bg-indigo-100 rounded-full flex items-center justify-center mr-3 text-2xl'>
									{achievement.icon}
								</div>
								<div>
									<h4 className='font-medium text-gray-900'>
										{achievement.title}
									</h4>
									<p className='text-gray-600 text-sm'>
										{achievement.description}
									</p>
									<p className='text-gray-400 text-xs mt-1'>
										–ü–æ–ª—É—á–µ–Ω–æ{' '}
										{new Date(achievement.unlockedAt).toLocaleDateString()}
									</p>
								</div>
							</div>
						))}
					</div>
				</div>
			)}
		</div>
	)
}
