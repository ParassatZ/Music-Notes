import { NextRequest, NextResponse } from 'next/server'

// –û–±—Ä–∞–±–æ—Ç–∫–∞ GET –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export async function GET(req: NextRequest) {
	try {
		// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∑–∞–ø—Ä–æ—Å–∞
		const authHeader = req.headers.get('Authorization')

		if (!authHeader || !authHeader.startsWith('Bearer ')) {
			console.error(
				'‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞ Authorization'
			)
			return NextResponse.json(
				{ error: '–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è' },
				{ status: 401 }
			)
		}

		// –§–æ—Ä–º–∏—Ä—É–µ–º URL –∫ –±—ç–∫–µ–Ω–¥—É
		const backendUrl = `${process.env.NEXT_PUBLIC_API_URL}/api/auth/profile`

		console.log('üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –±—ç–∫–µ–Ω–¥—É:', backendUrl)
		console.log(
			'üîë –ó–∞–≥–æ–ª–æ–≤–æ–∫ Authorization:',
			authHeader.substring(0, 20) + '...'
		)

		// –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ –±—ç–∫–µ–Ω–¥—É —Å –ø–µ—Ä–µ–¥–∞—á–µ–π —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
		const response = await fetch(backendUrl, {
			method: 'GET',
			headers: {
				Authorization: authHeader,
				'Content-Type': 'application/json',
			},
			cache: 'no-store', // –ù–µ –∫–µ—à–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç
		})

		console.log('üìä –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç –±—ç–∫–µ–Ω–¥—É, —Å—Ç–∞—Ç—É—Å:', response.status)

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
		const contentType = response.headers.get('content-type')
		console.log('üìÑ –¢–∏–ø —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –æ—Ç–≤–µ—Ç–∞:', contentType)

		// –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ—É—Å–ø–µ—à–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É —Å —Ç–µ–º –∂–µ —Å—Ç–∞—Ç—É—Å-–∫–æ–¥–æ–º
		if (!response.ok) {
			console.error(`‚ùå –û—à–∏–±–∫–∞ –±—ç–∫–µ–Ω–¥–∞: ${response.status}`)

			// –ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞ 401, –ø—Ä–æ–∫–∏–¥—ã–≤–∞–µ–º –µ—ë –ø—Ä—è–º–æ –∫–ª–∏–µ–Ω—Ç—É
			if (response.status === 401) {
				return NextResponse.json(
					{ error: '–¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ –∏—Å—Ç–µ–∫' },
					{ status: 401 }
				)
			}

			// –î–ª—è –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫ –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏
			try {
				const errorData = await response.json()
				return NextResponse.json(errorData, { status: response.status })
			} catch {
				// –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å JSON —Å –æ—à–∏–±–∫–æ–π
				return NextResponse.json(
					{ error: `–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${response.statusText}` },
					{ status: response.status }
				)
			}
		}

		// –ï—Å–ª–∏ —Ç–∏–ø —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –Ω–µ JSON, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É –∏–ª–∏ —Ç–µ–∫—Å—Ç
		if (contentType && !contentType.includes('application/json')) {
			// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
			const textResponse = await response.text()
			console.error(
				'‚ùå –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –Ω–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:',
				textResponse.substring(0, 100)
			)

			return NextResponse.json(
				{
					error: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞',
					details: '–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –Ω–µ JSON-–¥–∞–Ω–Ω—ã–µ',
					status: response.status,
				},
				{ status: 500 }
			)
		}

		// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞ –∫–∞–∫ JSON
		let data
		try {
			data = await response.json()
		} catch (jsonError) {
			console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ JSON:', jsonError)
			return NextResponse.json(
				{ error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞' },
				{ status: 500 }
			)
		}

		console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ:', data)
		return NextResponse.json(data, { status: 200 })
	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–æ—Ñ–∏–ª—è:', error)
		return NextResponse.json(
			{ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è' },
			{ status: 500 }
		)
	}
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ PUT –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export async function PUT(req: NextRequest) {
	try {
		// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
		const body = await req.json()

		// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∑–∞–ø—Ä–æ—Å–∞
		const authHeader = req.headers.get('Authorization')

		if (!authHeader || !authHeader.startsWith('Bearer ')) {
			return NextResponse.json(
				{ error: '–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è' },
				{ status: 401 }
			)
		}

		// –§–æ—Ä–º–∏—Ä—É–µ–º URL –∫ –±—ç–∫–µ–Ω–¥—É
		const backendUrl = `${process.env.NEXT_PUBLIC_API_URL}/api/auth/profile`

		console.log('üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è')

		// –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ –±—ç–∫–µ–Ω–¥—É
		const response = await fetch(backendUrl, {
			method: 'PUT',
			headers: {
				Authorization: authHeader,
				'Content-Type': 'application/json',
			},
			body: JSON.stringify(body),
		})

		console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç –±—ç–∫–µ–Ω–¥–∞, —Å—Ç–∞—Ç—É—Å:', response.status)

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
		const contentType = response.headers.get('content-type')

		// –ï—Å–ª–∏ —Ç–∏–ø —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –Ω–µ JSON, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É –∏–ª–∏ —Ç–µ–∫—Å—Ç
		if (contentType && !contentType.includes('application/json')) {
			const textResponse = await response.text()
			console.error(
				'‚ùå –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –Ω–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:',
				textResponse.substring(0, 100)
			)

			return NextResponse.json(
				{
					error: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞',
					details: '–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –Ω–µ JSON-–¥–∞–Ω–Ω—ã–µ',
				},
				{ status: 500 }
			)
		}

		// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞ –∫–∞–∫ JSON
		let data
		try {
			data = await response.json()
		} catch (jsonError) {
			console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ JSON:', jsonError)
			return NextResponse.json(
				{ error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞' },
				{ status: 500 }
			)
		}

		if (!response.ok) {
			console.error(
				`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è: ${response.status}`,
				data
			)
			return NextResponse.json(data, { status: response.status })
		}

		return NextResponse.json(data, { status: 200 })
	} catch (error) {
		console.error(
			'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è:',
			error
		)
		return NextResponse.json(
			{ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è' },
			{ status: 500 }
		)
	}
}
