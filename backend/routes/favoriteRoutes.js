const express = require('express')
const pool = require('../db')
const { authenticateToken } = require('../middleware/authMiddleware')

const router = express.Router()

// ‚úÖ –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –Ω–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –Ω–æ—Ç—ã)
router.get('/', authenticateToken, async (req, res) => {
	try {
		const userId = req.user.id

		const favorites = await pool.query(
			`SELECT sm.*, f.created_at AS added_to_favorites, u.username AS owner
             FROM favorites f
             JOIN sheet_music sm ON f.sheet_music_id = sm.id
             JOIN users u ON sm.user_id = u.id
             WHERE f.user_id = $1
             ORDER BY f.created_at DESC`,
			[userId]
		)

		res.json(favorites.rows)
	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –Ω–æ—Ç:', error.message)
		res
			.status(500)
			.json({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–µ.' })
	}
})

// ‚úÖ –î–æ–±–∞–≤–∏—Ç—å –Ω–æ—Ç—É –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
router.post('/:id', authenticateToken, async (req, res) => {
	try {
		const { id } = req.params
		const userId = req.user.id

		console.log(
			`üìå –ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ—Ç—É ${id} –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`
		)
		console.log(`üìä –¢–∏–ø ID: ${typeof id}, –∑–Ω–∞—á–µ–Ω–∏–µ: ${id}`)
		console.log(`üîê –î–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: userId=${userId}`)

		// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º ID –≤ —á–∏—Å–ª–æ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å
		const noteId = parseInt(id)
		if (!noteId || isNaN(noteId) || noteId <= 0) {
			console.error(`‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –Ω–æ—Ç—ã –ø–æ—Å–ª–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è: ${noteId}`)
			return res.status(400).json({ error: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –Ω–æ—Ç—ã' })
		}

		// üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –Ω–æ—Ç–∞
		const noteExists = await pool.query(
			'SELECT id FROM sheet_music WHERE id = $1',
			[noteId]
		)
		if (noteExists.rows.length === 0) {
			console.error(`‚ùå –ù–æ—Ç–∞ —Å ID ${noteId} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`)
			return res.status(404).json({ error: '–ù–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' })
		}

		// üíæ –ò—Å–ø–æ–ª—å–∑—É–µ–º UPSERT (INSERT .. ON CONFLICT DO NOTHING) –≤–º–µ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è
		console.log(
			`üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ UPSERT –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ: userId=${userId}, noteId=${noteId}`
		)
		const result = await pool.query(
			`INSERT INTO favorites (user_id, sheet_music_id)
             VALUES ($1, $2)
             ON CONFLICT (user_id, sheet_music_id) DO NOTHING
             RETURNING *`,
			[userId, noteId]
		)

		// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤—Å—Ç–∞–≤–∫–∏
		console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç UPSERT:`, result.rows)

		if (result.rows.length > 0) {
			console.log(
				`‚úÖ –ù–æ—Ç–∞ ${noteId} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`
			)
			res.status(201).json({
				message: '–ù–æ—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ',
			})
		} else {
			// –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –≤—Å—Ç–∞–≤–ª–µ–Ω–æ, –∑–Ω–∞—á–∏—Ç –∑–∞–ø–∏—Å—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
			console.log(`‚ÑπÔ∏è –ù–æ—Ç–∞ ${noteId} —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`)
			res.status(200).json({
				message: '–ù–æ—Ç–∞ —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º',
			})
		}
	} catch (error) {
		console.error(
			'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:',
			error.message,
			error.stack
		)
		res
			.status(500)
			.json({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ.' })
	}
})

// ‚úÖ –î–æ–±–∞–≤–∏—Ç—å –Ω–æ—Ç—É –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —Å —Ç–µ–ª–æ–º –∑–∞–ø—Ä–æ—Å–∞)
router.post('/', authenticateToken, async (req, res) => {
	try {
		const { sheet_music_id } = req.body
		const userId = req.user.id

		console.log(
			`üìå –ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ—Ç—É —á–µ—Ä–µ–∑ body: ${JSON.stringify(req.body)}`
		)
		console.log(`üîê –î–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: userId=${userId}`)

		if (!sheet_music_id && sheet_music_id !== 0) {
			console.error(`‚ùå –ù–µ —É–∫–∞–∑–∞–Ω –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –Ω–æ—Ç—ã –≤ —Ç–µ–ª–µ –∑–∞–ø—Ä–æ—Å–∞`)
			return res.status(400).json({ error: '–ù–µ —É–∫–∞–∑–∞–Ω –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –Ω–æ—Ç—ã' })
		}

		// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —á–∏—Å–ª–æ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
		const noteId = parseInt(sheet_music_id)
		if (isNaN(noteId) || noteId <= 0) {
			console.error(
				`‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –Ω–æ—Ç—ã –≤ —Ç–µ–ª–µ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ—Å–ª–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è: ${noteId}`
			)
			return res.status(400).json({ error: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –Ω–æ—Ç—ã' })
		}

		// üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –Ω–æ—Ç–∞
		const noteExists = await pool.query(
			'SELECT id FROM sheet_music WHERE id = $1',
			[noteId]
		)

		if (noteExists.rows.length === 0) {
			console.error(`‚ùå –ù–æ—Ç–∞ —Å ID ${noteId} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`)
			return res.status(404).json({ error: '–ù–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' })
		}

		// üíæ –ò—Å–ø–æ–ª—å–∑—É–µ–º UPSERT (INSERT .. ON CONFLICT DO NOTHING) –≤–º–µ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è
		console.log(
			`üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ UPSERT –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ —á–µ—Ä–µ–∑ body: userId=${userId}, noteId=${noteId}`
		)
		const result = await pool.query(
			`INSERT INTO favorites (user_id, sheet_music_id)
             VALUES ($1, $2)
             ON CONFLICT (user_id, sheet_music_id) DO NOTHING
             RETURNING *`,
			[userId, noteId]
		)

		// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤—Å—Ç–∞–≤–∫–∏
		console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç UPSERT:`, result.rows)

		if (result.rows.length > 0) {
			console.log(
				`‚úÖ –ù–æ—Ç–∞ ${noteId} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`
			)
			res.status(201).json({
				message: '–ù–æ—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ',
			})
		} else {
			// –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –≤—Å—Ç–∞–≤–ª–µ–Ω–æ, –∑–Ω–∞—á–∏—Ç –∑–∞–ø–∏—Å—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
			console.log(`‚ÑπÔ∏è –ù–æ—Ç–∞ ${noteId} —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`)
			res.status(200).json({
				message: '–ù–æ—Ç–∞ —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º',
			})
		}
	} catch (error) {
		console.error(
			'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:',
			error.message,
			error.stack
		)
		res
			.status(500)
			.json({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ.' })
	}
})

// ‚úÖ –£–¥–∞–ª–∏—Ç—å –Ω–æ—Ç—É –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
router.delete('/:id', authenticateToken, async (req, res) => {
	try {
		const { id } = req.params
		const userId = req.user.id

		console.log(
			`üìå –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å –Ω–æ—Ç—É ${id} –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`
		)
		console.log(`üìä –¢–∏–ø ID: ${typeof id}, –∑–Ω–∞—á–µ–Ω–∏–µ: ${id}`)

		// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º ID –≤ —á–∏—Å–ª–æ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å
		const noteId = parseInt(id)
		if (!noteId || isNaN(noteId) || noteId <= 0) {
			console.error(`‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –Ω–æ—Ç—ã –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: ${noteId}`)
			return res.status(400).json({ error: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –Ω–æ—Ç—ã' })
		}

		// üöÄ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è
		const result = await pool.query(
			`DELETE FROM favorites 
             WHERE user_id = $1 AND sheet_music_id = $2 
             RETURNING *`,
			[userId, noteId]
		)

		console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —É–¥–∞–ª–µ–Ω–∏—è:`, result)

		if (result.rowCount === 0) {
			console.log(
				`‚ÑπÔ∏è –ù–æ—Ç–∞ ${noteId} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`
			)
			return res.status(404).json({ error: '–ù–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º' })
		}

		console.log(
			`‚úÖ –ù–æ—Ç–∞ ${noteId} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`
		)

		// üìå –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
		const updatedFavorites = await pool.query(
			`SELECT sm.*, f.created_at AS added_to_favorites, u.username AS owner
             FROM favorites f
             JOIN sheet_music sm ON f.sheet_music_id = sm.id
             JOIN users u ON sm.user_id = u.id
             WHERE f.user_id = $1
             ORDER BY f.created_at DESC`,
			[userId]
		)

		res.json({
			message: '–ù–æ—Ç–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ',
			favorites: updatedFavorites.rows,
		})
	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:', error.message)
		res
			.status(500)
			.json({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ.' })
	}
})

module.exports = router
